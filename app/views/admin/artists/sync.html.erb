<script src="https://fb.me/react-15.1.0.js"></script>
<script src="https://fb.me/react-dom-15.1.0.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/remarkable/1.6.2/remarkable.min.js"></script>

<div id="example"></div>
<div id="example2"></div>
<div id="tutorial"></div>
<script type="text/babel">
  var HelloWorld = React.createClass({
    render: function() {
      return (
          <p>
            Hello, <input type="text" placeholder="Your name here" />!
            It is {this.props.date.toTimeString()}
          </p>
      );
    }
  });

  setInterval(function() {
    ReactDOM.render(
        <HelloWorld date={new Date()} />,
        document.getElementById('example')
    );
  }, 500);

//  var Factory = React.createFactory(ComponentClass);
//  var root = Factory({ custom: 'prop' });
  var root = React.DOM.ul({ className: 'my-list' },
      React.DOM.li(null, 'What up'),
      React.DOM.li(null, "dude")
  );
  ReactDOM.render(root, document.getElementById('example2'));


// Tutorial Code

  var data = [
    {id: 1, author: "Pete Hunt", text: "This is one comment"},
    {id: 2, author: "Jordan Walke", text: "This is *another* comment"}
  ];

  // Tutorial 4
  var Comment = React.createClass({
    rawMarkup: function() {
      var md = new Remarkable();
      var rawMarkup = md.render(this.props.children.toString());
      return { __html: rawMarkup };
    },

    render: function() {
//      var markdown = new Remarkable();
      return (
          <div className="comment">
            <h2 className="commentAuthor">
              {this.props.author}
            </h2>
            <span dangerouslySetInnerHTML={this.rawMarkup()}></span>
          </div>
      )
    }
  });

  // tutorial2.js
  var CommentList = React.createClass({
    render: function() {
      var commentNodes = this.props.data.map(function(comment) {
        return (
            <Comment author={comment.RetailerId} key={comment.RetailerId}>
              {comment.SyncTime}
            </Comment>
        );
      });
      return (
          <div className="commentList">
            {commentNodes}
          </div>
      );
    }
  });

  var CommentForm = React.createClass({
    render: function() {
      return (
          <div className="commentForm">
            Hello, world! I am a CommentForm.
          </div>
      );
    }
  });

  // tutorial3.js
  var CommentBox = React.createClass({
    loadCommentsFromServer: function() {
      $.ajax({
        url: this.props.url,
        cache: false,
        success: function(data) {
          this.setState({data: data})
        }.bind(this),
        error: function(xhr, status, err) {
          console.error(this.props.url, status, err.toString())
        }.bind(this)
      })
    },
    getInitialState: function() {
      return {data: []};
    },
    componentDidMount: function() {
      this.loadCommentsFromServer();
    },
    render: function() {
      return (
          <div className="commentBox">
            <h1>Comments</h1>
            <CommentList data={this.state.data} />
            <CommentForm />
          </div>
      );
    }
  });


  ReactDOM.render(
      <CommentBox url="https://inventory-staging.duberex.com/inventoryapi/v1/retailers/synctimes"/>,
      document.getElementById('tutorial')
  );

//  ReactDOM.render(
//      <CommentBox data={dataComments}/>,
//      document.getElementById('tutorial')
//  );
</script>